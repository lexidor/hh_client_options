Typing[4054] This type doesn't implement the method read
   --> vendor/facebook/hh-clilib/src/TestLib/StringInput.hack
 18 | final class StringInput implements IO\ReadHandle, IO\UserspaceHandle {
    |             ^^^^^^^^^^^
    |                                    ^^^^^^^^^^^^^ Which is required by this interface
   --> vendor/hhvm/hsl-experimental/src/io/ReadHandle.php
 31 |   public function read(?int $max_bytes = null): string;
    |                   ^^^^ As defined here

Typing[4341] Member readAsync has the wrong type
   --> vendor/facebook/hh-clilib/src/TestLib/StringInput.hack
 40 |   public async function readAsync(
    |                         ^^^^^^^^^
 42 |     ?float $_timeout_seconds = null,
    |      ^^^^^ Expected float
   --> vendor/hhvm/hsl-experimental/src/io/ReadHandle.php
 47 |     ?int $timeout_ns = null,
    |      ^^^ But got int

Typing[4281] You cannot use HH_FIXME or HH_IGNORE_ERROR comments to suppress error 4281
   --> vendor/facebook/xhp-lib/src/core/Node.hack
721 |     /* HH_FIXME[4281] stringish migration */
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Typing[4281] Cannot cast a value of type XHPChild to string.
Only primitives may be used in a (string) cast.
If you are trying to cast a Stringish type, please use `stringish_cast`.
This functionality is being removed from HHVM.
   --> vendor/facebook/xhp-lib/src/core/Node.hack
722 |     return \htmlspecialchars((string)$child);
    |                              ^^^^^^^^^^^^^^

Typing[4053] No method 'isEndOfFile' in HH\Lib\IO\ReadHandle (did you mean 'readAsync'?)
   --> vendor/hhvm/hhast/src/__Private/LSPImpl/Server.hack
107 |         while (!$stdin->isEndOfFile()) {
    |                         ^^^^^^^^^^^
   --> vendor/facebook/hh-clilib/src/ITerminal.hack
 41 |   public function getStdin(): IO\ReadHandle;
    |                               ^^^^^^^^^^^^^ This is why I think it is an object of type HH\Lib\IO\ReadHandle
   --> vendor/hhvm/hsl-experimental/src/io/ReadHandle.php
 17 | interface ReadHandle extends Handle {
    |           ^^^^^^^^^^ Declaration of HH\Lib\IO\ReadHandle is here

Typing[4053] No method 'readLineAsync' in HH\Lib\IO\ReadHandle (did you mean 'readAsync'?)
   --> vendor/hhvm/hhast/src/__Private/LSPImpl/read_message_async.hack
 14 | async function read_message_async(IO\ReadHandle $in): Awaitable<string> {
    |                                   ^^^^^^^^^^^^^ This is why I think it is an object of type HH\Lib\IO\ReadHandle
 21 |     $line = await $in->readLineAsync();
    |                        ^^^^^^^^^^^^^
   --> vendor/hhvm/hsl-experimental/src/io/ReadHandle.php
 17 | interface ReadHandle extends Handle {
    |           ^^^^^^^^^^ Declaration of HH\Lib\IO\ReadHandle is here

Typing[4053] No method 'isEndOfFile' in HH\Lib\IO\ReadHandle (did you mean 'readAsync'?)
   --> vendor/hhvm/hhast/src/__Private/LSPImpl/read_message_async.hack
 14 | async function read_message_async(IO\ReadHandle $in): Awaitable<string> {
    |                                   ^^^^^^^^^^^^^ This is why I think it is an object of type HH\Lib\IO\ReadHandle
 38 |   while ($length > 0 && !$in->isEndOfFile()) {
    |                               ^^^^^^^^^^^
   --> vendor/hhvm/hsl-experimental/src/io/ReadHandle.php
 17 | interface ReadHandle extends Handle {
    |           ^^^^^^^^^^ Declaration of HH\Lib\IO\ReadHandle is here

Typing[4053] No method 'readLineAsync' in HH\Lib\IO\ReadHandle (did you mean 'readAsync'?)
   --> vendor/hhvm/hhast/src/__Private/LintRunCLIEventHandler.hack
187 |       $response = await $this->terminal->getStdin()->readLineAsync();
    |                                                      ^^^^^^^^^^^^^
   --> vendor/facebook/hh-clilib/src/ITerminal.hack
 41 |   public function getStdin(): IO\ReadHandle;
    |                               ^^^^^^^^^^^^^ This is why I think it is an object of type HH\Lib\IO\ReadHandle
   --> vendor/hhvm/hsl-experimental/src/io/ReadHandle.php
 17 | interface ReadHandle extends Handle {
    |           ^^^^^^^^^^ Declaration of HH\Lib\IO\ReadHandle is here

Typing[4223] You cannot use HH_FIXME or HH_IGNORE_ERROR comments to suppress error 4223
   --> vendor/hhvm/hhast/src/__Private/codegen/CodegenRelations.hack
374 |     /* HH_IGNORE_ERROR[4223] Only allowed in partial mode. */
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Typing[4223] Cannot use ... without a parameter name in strict mode. Please add a parameter name.
   --> vendor/hhvm/hhast/src/__Private/codegen/CodegenRelations.hack
375 |     (...) ==> null;
    |     ^^^^^^^^^^^^^^

Naming[2083] You cannot use HH_FIXME or HH_IGNORE_ERROR comments to suppress error 2083
   --> vendor/hhvm/hhast/src/__Private/codegen/CodegenRelations.hack
376 |     /* HH_IGNORE_ERROR[2083] */ /* HHAST_IGNORE_ERROR[NoPHPArrayLiterals] */
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

Naming[2083] Array literals are no longer legal; use varray or darray instead
   --> vendor/hhvm/hhast/src/__Private/codegen/CodegenRelations.hack
377 |     array();
    |     ^^^^^^^

Parsing[1002] XHP children declarations are no longer supported.
   --> vendor/hhvm/hhast/src/__Private/codegen/data/XHPChildrenSyntaxExample.hack
 12 |   children (pcdata);
    |            ^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\ReadHandle
   --> vendor/nuxed/console/src/Nuxed/Console/Input/Input.hack
 64 |   protected IO\ReadHandle $stdin;
    |             ^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\ReadHandle
   --> vendor/nuxed/console/src/Nuxed/Console/Input/Input.hack
 77 |     IO\ReadHandle $stdin,
    |     ^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\WriteHandle
   --> vendor/nuxed/console/src/Nuxed/Console/Output/Output.hack
 19 |   private IO\WriteHandle $stdout;
    |           ^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\WriteHandle
   --> vendor/nuxed/console/src/Nuxed/Console/Output/Output.hack
 20 |   private IO\WriteHandle $stderr;
    |           ^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\WriteHandle
   --> vendor/nuxed/console/src/Nuxed/Console/Output/Output.hack
 26 |     IO\WriteHandle $stdout,
    |     ^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\WriteHandle
   --> vendor/nuxed/console/src/Nuxed/Console/Output/Output.hack
 27 |     IO\WriteHandle $stderr,
    |     ^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\WriteHandle
   --> vendor/nuxed/console/src/Nuxed/Console/Output/Output.hack
 96 |     IO\WriteHandle $handle,
    |     ^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\request_input (a global function)
   --> vendor/nuxed/console/src/Nuxed/Console/functions.hack
 13 |   return new Input\Input(argv(), IO\request_input(), $strict);
    |                                  ^^^^^^^^^^^^^^^^

Typing[4107] Unbound name (typing): HH\Lib\Experimental\IO\request_input
   --> vendor/nuxed/console/src/Nuxed/Console/functions.hack
 13 |   return new Input\Input(argv(), IO\request_input(), $strict);
    |                                  ^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\request_output (a global function)
   --> vendor/nuxed/console/src/Nuxed/Console/functions.hack
 23 |   $stdout = IO\request_output();
    |             ^^^^^^^^^^^^^^^^^

Typing[4107] Unbound name (typing): HH\Lib\Experimental\IO\request_output
   --> vendor/nuxed/console/src/Nuxed/Console/functions.hack
 23 |   $stdout = IO\request_output();
    |             ^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\request_error (a global function)
   --> vendor/nuxed/console/src/Nuxed/Console/functions.hack
 24 |   $stderr = IO\request_error() ?? $stdout;
    |             ^^^^^^^^^^^^^^^^

Typing[4107] Unbound name (typing): HH\Lib\Experimental\IO\request_error
   --> vendor/nuxed/console/src/Nuxed/Console/functions.hack
 24 |   $stderr = IO\request_error() ?? $stdout;
    |             ^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\SeekableHandle
   --> vendor/nuxed/contract/src/Nuxed/Contract/Http/Message/IMessage.hack
 17 | interface IMessage<T as IO\SeekableHandle> {
    |                         ^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\SeekableReadHandle
   --> vendor/nuxed/contract/src/Nuxed/Contract/Http/Message/IRequest.hack
 24 | interface IRequest extends IMessage<IO\SeekableReadHandle> {
    |                                     ^^^^^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\SeekableReadWriteHandle
   --> vendor/nuxed/contract/src/Nuxed/Contract/Http/Message/IResponse.hack
 21 | interface IResponse extends IMessage<IO\SeekableReadWriteHandle> {
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\File\ReadHandle
   --> vendor/nuxed/contract/src/Nuxed/Contract/Http/Message/IUploadedFile.hack
 27 |   public function getHandle(): File\ReadHandle;
    |                                ^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\File\CloseableReadHandle
   --> vendor/nuxed/filesystem/src/Nuxed/Filesystem/File.hack
  7 |   public function getReadHandle(): File\CloseableReadHandle {
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\File\open_read_only_nd (a global function)
   --> vendor/nuxed/filesystem/src/Nuxed/Filesystem/File.hack
 12 |       return File\open_read_only_nd($this->path->toString());
    |              ^^^^^^^^^^^^^^^^^^^^^^

Typing[4107] Unbound name (typing): HH\Lib\Experimental\File\open_read_only_nd
   --> vendor/nuxed/filesystem/src/Nuxed/Filesystem/File.hack
 12 |       return File\open_read_only_nd($this->path->toString());
    |              ^^^^^^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\File\WriteMode
   --> vendor/nuxed/filesystem/src/Nuxed/Filesystem/File.hack
 26 |     File\WriteMode $mode = File\WriteMode::OPEN_OR_CREATE,
    |     ^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\File\WriteMode (an object type)
   --> vendor/nuxed/filesystem/src/Nuxed/Filesystem/File.hack
 26 |     File\WriteMode $mode = File\WriteMode::OPEN_OR_CREATE,
    |                            ^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\File\CloseableWriteHandle
   --> vendor/nuxed/filesystem/src/Nuxed/Filesystem/File.hack
 27 |   ): File\CloseableWriteHandle {
    |      ^^^^^^^^^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\File\WriteMode (an object type)
   --> vendor/nuxed/filesystem/src/Nuxed/Filesystem/File.hack
 28 |     if ($mode === File\WriteMode::MUST_CREATE && $this->exists()) {
    |                   ^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\File\WriteMode (an object type)
   --> vendor/nuxed/filesystem/src/Nuxed/Filesystem/File.hack
 35 |     $creating = $mode === File\WriteMode::OPEN_OR_CREATE ||
    |                           ^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\File\WriteMode (an object type)
   --> vendor/nuxed/filesystem/src/Nuxed/Filesystem/File.hack
 36 |       $mode === File\WriteMode::MUST_CREATE;
    |                 ^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\File\WriteMode (an object type)
   --> vendor/nuxed/filesystem/src/Nuxed/Filesystem/File.hack
 46 |         ($mode === File\WriteMode::OPEN_OR_CREATE && $this->exists())
    |                    ^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\File\open_write_only_nd (a global function)
   --> vendor/nuxed/filesystem/src/Nuxed/Filesystem/File.hack
 56 |       return File\open_write_only_nd($this->path->toString(), $mode);
    |              ^^^^^^^^^^^^^^^^^^^^^^^

Typing[4107] Unbound name (typing): HH\Lib\Experimental\File\open_write_only_nd
   --> vendor/nuxed/filesystem/src/Nuxed/Filesystem/File.hack
 56 |       return File\open_write_only_nd($this->path->toString(), $mode);
    |              ^^^^^^^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\File\WriteMode
   --> vendor/nuxed/filesystem/src/Nuxed/Filesystem/File.hack
 71 |     File\WriteMode $mode = File\WriteMode::OPEN_OR_CREATE,
    |     ^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\File\WriteMode (an object type)
   --> vendor/nuxed/filesystem/src/Nuxed/Filesystem/File.hack
 71 |     File\WriteMode $mode = File\WriteMode::OPEN_OR_CREATE,
    |                            ^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\File\CloseableReadWriteHandle
   --> vendor/nuxed/filesystem/src/Nuxed/Filesystem/File.hack
 72 |   ): File\CloseableReadWriteHandle {
    |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\File\WriteMode (an object type)
   --> vendor/nuxed/filesystem/src/Nuxed/Filesystem/File.hack
 73 |     if ($mode === File\WriteMode::MUST_CREATE && $this->exists()) {
    |                   ^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\File\WriteMode (an object type)
   --> vendor/nuxed/filesystem/src/Nuxed/Filesystem/File.hack
 80 |     $creating = $mode === File\WriteMode::OPEN_OR_CREATE ||
    |                           ^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\File\WriteMode (an object type)
   --> vendor/nuxed/filesystem/src/Nuxed/Filesystem/File.hack
 81 |       $mode === File\WriteMode::MUST_CREATE;
    |                 ^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\File\WriteMode (an object type)
   --> vendor/nuxed/filesystem/src/Nuxed/Filesystem/File.hack
 91 |         ($mode === File\WriteMode::OPEN_OR_CREATE && $this->exists())
    |                    ^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\File\open_read_write_nd (a global function)
   --> vendor/nuxed/filesystem/src/Nuxed/Filesystem/File.hack
105 |       return File\open_read_write_nd($this->path()->toString(), $mode);
    |              ^^^^^^^^^^^^^^^^^^^^^^^

Typing[4107] Unbound name (typing): HH\Lib\Experimental\File\open_read_write_nd
   --> vendor/nuxed/filesystem/src/Nuxed/Filesystem/File.hack
105 |       return File\open_read_write_nd($this->path()->toString(), $mode);
    |              ^^^^^^^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\File\WriteMode (an object type)
   --> vendor/nuxed/filesystem/src/Nuxed/Filesystem/File.hack
268 |       await $this->write($data, File\WriteMode::APPEND);
    |                                 ^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\File\WriteMode
   --> vendor/nuxed/filesystem/src/Nuxed/Filesystem/File.hack
305 |     File\WriteMode $mode = File\WriteMode::TRUNCATE,
    |     ^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\File\WriteMode (an object type)
   --> vendor/nuxed/filesystem/src/Nuxed/Filesystem/File.hack
305 |     File\WriteMode $mode = File\WriteMode::TRUNCATE,
    |                            ^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\File\LockType (an object type)
   --> vendor/nuxed/filesystem/src/Nuxed/Filesystem/File.hack
310 |         using ($_lock = $handle->tryLockx(File\LockType::EXCLUSIVE)) {
    |                                           ^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\File\AlreadyLockedException (an object type)
   --> vendor/nuxed/filesystem/src/Nuxed/Filesystem/File.hack
313 |       } catch (File\AlreadyLockedException $e) {
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\File\LockType (an object type)
   --> vendor/nuxed/filesystem/src/Nuxed/Filesystem/File.hack
314 |         using ($_lock = $handle->lock(File\LockType::EXCLUSIVE)) {
    |                                       ^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\File\LockType (an object type)
   --> vendor/nuxed/filesystem/src/Nuxed/Filesystem/File.hack
339 |         using ($_lock = $handle->tryLockx(File\LockType::SHARED)) {
    |                                           ^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\File\AlreadyLockedException (an object type)
   --> vendor/nuxed/filesystem/src/Nuxed/Filesystem/File.hack
342 |       } catch (File\AlreadyLockedException $e) {
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\File\LockType (an object type)
   --> vendor/nuxed/filesystem/src/Nuxed/Filesystem/File.hack
343 |         using ($_lock = $handle->lock(File\LockType::SHARED)) {
    |                                       ^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\WriteHandle
   --> vendor/nuxed/http-emitter/src/Nuxed/Http/Emitter/Emitter.hack
  7 |   private ?IO\WriteHandle $output;
    |            ^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\WriteHandle
   --> vendor/nuxed/http-emitter/src/Nuxed/Http/Emitter/Emitter.hack
 14 |     ?IO\WriteHandle $output = null,
    |      ^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\SeekableReadHandle
   --> vendor/nuxed/http-emitter/src/Nuxed/Http/Emitter/_Private/copy.hack
 10 |   <<__AcceptDisposable>> IO\SeekableReadHandle $source,
    |                          ^^^^^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\WriteHandle
   --> vendor/nuxed/http-emitter/src/Nuxed/Http/Emitter/_Private/copy.hack
 11 |   <<__AcceptDisposable>> IO\WriteHandle $target,
    |                          ^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\SeekableReadHandle
   --> vendor/nuxed/http-emitter/src/Nuxed/Http/Emitter/_Private/copy.hack
 34 |   <<__AcceptDisposable>> IO\SeekableReadHandle $source,
    |                          ^^^^^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\WriteHandle
   --> vendor/nuxed/http-emitter/src/Nuxed/Http/Emitter/_Private/copy.hack
 35 |   <<__AcceptDisposable>> IO\WriteHandle $target,
    |                          ^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\WriteHandle
   --> vendor/nuxed/http-emitter/src/Nuxed/Http/Emitter/_Private/stream.hack
  8 |   IO\WriteHandle $target,
    |   ^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\SeekableReadHandle
   --> vendor/nuxed/http-emitter/src/Nuxed/Http/Emitter/content.hack
  9 |   IO\SeekableReadHandle $source,
    |   ^^^^^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\WriteHandle
   --> vendor/nuxed/http-emitter/src/Nuxed/Http/Emitter/content.hack
 10 |   ?IO\WriteHandle $target = null,
    |    ^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\request_output (a global function)
   --> vendor/nuxed/http-emitter/src/Nuxed/Http/Emitter/content.hack
 13 |   $target ??= IO\request_output();
    |               ^^^^^^^^^^^^^^^^^

Typing[4107] Unbound name (typing): HH\Lib\Experimental\IO\request_output
   --> vendor/nuxed/http-emitter/src/Nuxed/Http/Emitter/content.hack
 13 |   $target ??= IO\request_output();
    |               ^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\WriteHandle
   --> vendor/nuxed/http-emitter/src/Nuxed/Http/Emitter/emit.hack
 16 |   ?IO\WriteHandle $target = null,
    |    ^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\WriteHandle
   --> vendor/nuxed/http-emitter/src/Nuxed/Http/Emitter/stream.hack
  8 |   ?IO\WriteHandle $target = null,
    |    ^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\request_output (a global function)
   --> vendor/nuxed/http-emitter/src/Nuxed/Http/Emitter/stream.hack
 11 |   $target ??= IO\request_output();
    |               ^^^^^^^^^^^^^^^^^

Typing[4107] Unbound name (typing): HH\Lib\Experimental\IO\request_output
   --> vendor/nuxed/http-emitter/src/Nuxed/Http/Emitter/stream.hack
 11 |   $target ??= IO\request_output();
    |               ^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\SeekableReadWriteHandle
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/Body/functions.hack
  6 | function temporary(): IO\SeekableReadWriteHandle {
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\SeekableReadWriteHandle
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/Body/functions.hack
  8 |     (): IO\SeekableReadWriteHandle ==> File\open_read_write_nd(
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\File\open_read_write_nd (a global function)
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/Body/functions.hack
  8 |     (): IO\SeekableReadWriteHandle ==> File\open_read_write_nd(
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^

Typing[4107] Unbound name (typing): HH\Lib\Experimental\File\open_read_write_nd
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/Body/functions.hack
  8 |     (): IO\SeekableReadWriteHandle ==> File\open_read_write_nd(
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\File\WriteMode (an object type)
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/Body/functions.hack
 10 |       File\WriteMode::MUST_CREATE,
    |       ^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\SeekableReadWriteHandle
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/Body/functions.hack
 15 | function memory(string $data = ''): IO\SeekableReadWriteHandle {
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\File\WriteMode
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/Body/functions.hack
 21 |   File\WriteMode $mode = File\WriteMode::OPEN_OR_CREATE,
    |   ^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\File\WriteMode (an object type)
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/Body/functions.hack
 21 |   File\WriteMode $mode = File\WriteMode::OPEN_OR_CREATE,
    |                          ^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\SeekableReadWriteHandle
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/Body/functions.hack
 22 | ): IO\SeekableReadWriteHandle {
    |    ^^^^^^^^^^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\SeekableReadWriteHandle
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/Body/functions.hack
 24 |     (): IO\SeekableReadWriteHandle ==> File\open_read_write_nd($path, $mode),
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\File\open_read_write_nd (a global function)
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/Body/functions.hack
 24 |     (): IO\SeekableReadWriteHandle ==> File\open_read_write_nd($path, $mode),
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^

Typing[4107] Unbound name (typing): HH\Lib\Experimental\File\open_read_write_nd
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/Body/functions.hack
 24 |     (): IO\SeekableReadWriteHandle ==> File\open_read_write_nd($path, $mode),
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\SeekableReadWriteHandle
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/Body/functions.hack
 29 |   (function(): IO\SeekableReadWriteHandle) $factory,
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\SeekableReadWriteHandle
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/Body/functions.hack
 30 | ): IO\SeekableReadWriteHandle {
    |    ^^^^^^^^^^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\SeekableHandle
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/Message.hack
 11 | abstract class Message<T as IO\SeekableHandle> implements Message\IMessage<T> {
    |                             ^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\SeekableReadHandle
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/Request.hack
  9 |   extends Message<IO\SeekableReadHandle>
    |                   ^^^^^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\SeekableReadHandle
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/Request.hack
 21 |     ?IO\SeekableReadHandle $body = null,
    |      ^^^^^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\SeekableReadHandle
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/Request.hack
164 |   public function getBody(): IO\SeekableReadHandle {
    |                              ^^^^^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\SeekableReadWriteHandle
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/Response.hack
  9 |   extends Message<IO\SeekableReadWriteHandle>
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\SeekableReadWriteHandle
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/Response.hack
 84 |     ?IO\SeekableReadWriteHandle $body = null,
    |      ^^^^^^^^^^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\SeekableReadWriteHandle
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/Response.hack
201 |   public function getBody(): IO\SeekableReadWriteHandle {
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\SeekableReadWriteHandle
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/ServerRequest.hack
 26 |     ?IO\SeekableReadWriteHandle $body = null,
    |      ^^^^^^^^^^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\File\CloseableReadHandle
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/UploadedFile.hack
 11 |   private ?File\CloseableReadHandle $handle;
    |            ^^^^^^^^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\File\CloseableReadHandle
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/UploadedFile.hack
 31 |   public function getHandle(): File\CloseableReadHandle {
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\File\open_read_only_nd (a global function)
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/UploadedFile.hack
 48 |     $this->handle = File\open_read_only_nd($this->file);
    |                     ^^^^^^^^^^^^^^^^^^^^^^

Typing[4107] Unbound name (typing): HH\Lib\Experimental\File\open_read_only_nd
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/UploadedFile.hack
 48 |     $this->handle = File\open_read_only_nd($this->file);
    |                     ^^^^^^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\File\open_write_only (a global function)
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/UploadedFile.hack
 79 |       $target = File\open_write_only(
    |                 ^^^^^^^^^^^^^^^^^^^^

Typing[4107] Unbound name (typing): HH\Lib\Experimental\File\open_write_only
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/UploadedFile.hack
 79 |       $target = File\open_write_only(
    |                 ^^^^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\File\WriteMode (an object type)
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/UploadedFile.hack
 81 |         File\WriteMode::OPEN_OR_CREATE,
    |         ^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\File\LockType (an object type)
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/UploadedFile.hack
 84 |       using ($_lock = $target->tryLockx(File\LockType::EXCLUSIVE)) {
    |                                         ^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\File\ReadHandle
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/UploadedFile.hack
134 |     <<__AcceptDisposable>> File\ReadHandle $source,
    |                            ^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\File\WriteHandle
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/UploadedFile.hack
135 |     <<__AcceptDisposable>> File\WriteHandle $target,
    |                            ^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\SeekableReadWriteHandle (an object type)
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/_Private/IO/LazyHandle.hack
 10 |     IO\SeekableReadWriteHandle,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\CloseableSeekableReadWriteHandle (an object type)
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/_Private/IO/LazyHandle.hack
 11 |     IO\CloseableSeekableReadWriteHandle,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\CloseableReadWriteHandle (an object type)
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/_Private/IO/LazyHandle.hack
 12 |     IO\CloseableReadWriteHandle {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\SeekableReadWriteHandle
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/_Private/IO/LazyHandle.hack
 14 |   private ?IO\SeekableReadWriteHandle $handle = null;
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\SeekableReadWriteHandle
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/_Private/IO/LazyHandle.hack
 15 |   private (function(): IO\SeekableReadWriteHandle) $factory;
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\SeekableReadWriteHandle
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/_Private/IO/LazyHandle.hack
 18 |     (function(): IO\SeekableReadWriteHandle) $factory,
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\SeekableReadWriteHandle
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/_Private/IO/LazyHandle.hack
 23 |   protected function getHandle(): IO\SeekableReadWriteHandle {
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\CloseableHandle
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/_Private/IO/LazyHandle.hack
 74 |     if ($this->handle is nonnull && $this->handle is IO\CloseableHandle) {
    |                                                      ^^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\CloseableSeekableReadWriteHandle (an object type)
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/_Private/IO/MemoryHandle.hack
  7 |   implements IO\CloseableSeekableReadWriteHandle, IO\SeekableReadWriteHandle {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\SeekableReadWriteHandle (an object type)
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/_Private/IO/MemoryHandle.hack
  7 |   implements IO\CloseableSeekableReadWriteHandle, IO\SeekableReadWriteHandle {
    |                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\File\_Private\CloseableFileHandle (an object type)
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/_Private/IO/ResourceHandle.hack
  6 |   extends File\_Private\CloseableFileHandle
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\SeekableReadWriteHandle (an object type)
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/_Private/IO/ResourceHandle.hack
  8 |     IO\SeekableReadWriteHandle,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\CloseableSeekableReadWriteHandle (an object type)
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/_Private/IO/ResourceHandle.hack
  9 |     IO\CloseableSeekableReadWriteHandle,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\CloseableReadWriteHandle (an object type)
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/_Private/IO/ResourceHandle.hack
 10 |     IO\CloseableReadWriteHandle {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\_Private\LegacyPHPResourceReadHandleTrait (a trait)
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/_Private/IO/ResourceHandle.hack
 11 |   use IO\_Private\LegacyPHPResourceReadHandleTrait;
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\_Private\LegacyPHPResourceWriteHandleTrait (a trait)
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/_Private/IO/ResourceHandle.hack
 12 |   use IO\_Private\LegacyPHPResourceWriteHandleTrait;
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\_Private\LegacyPHPResourceSeekableHandleTrait (a trait)
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/_Private/IO/ResourceHandle.hack
 13 |   use IO\_Private\LegacyPHPResourceSeekableHandleTrait;
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\SeekableReadWriteHandle
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/_Private/IO/ResourceHandle.hack
 15 |   public static function input(): IO\SeekableReadWriteHandle {
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\SeekableReadWriteHandle
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/_Private/IO/ResourceHandle.hack
 21 |   public static function output(): IO\SeekableReadWriteHandle {
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\SeekableHandle
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/_Private/cache_controle.hack
  7 | function has_cache_control_directive<T as IO\SeekableHandle>(
    |                                           ^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\SeekableHandle
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/_Private/cache_controle.hack
 25 | function get_cache_control_directive<T as IO\SeekableHandle>(
    |                                           ^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\SeekableHandle
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/_Private/cache_controle.hack
 40 |   TH as IO\SeekableHandle,
    |         ^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\SeekableHandle
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/_Private/cache_controle.hack
 61 |   TH as IO\SeekableHandle,
    |         ^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\SeekableHandle
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/_Private/date.hack
  9 |   TH as IO\SeekableHandle,
    |         ^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\SeekableHandle
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/_Private/date.hack
 28 |   TH as IO\SeekableHandle,
    |         ^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\SeekableReadWriteHandle
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/functions.hack
 32 |   ?IO\SeekableReadWriteHandle $body = null,
    |    ^^^^^^^^^^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\SeekableReadWriteHandle
   --> vendor/nuxed/http-message/src/Nuxed/Http/Message/functions.hack
 41 |   ?IO\SeekableReadWriteHandle $body = null,
    |    ^^^^^^^^^^^^^^^^^^^^^^^^^^

Typing[4053] No method 'rawReadBlocking' in HH\Lib\IO\ReadHandle (did you mean 'readAsync'?)
   --> vendor/usox/hackttp/src/UploadedFile.hack
 22 |     private IO\ReadHandle $stream,
    |             ^^^^^^^^^^^^^ This is why I think it is an object of type HH\Lib\IO\ReadHandle
 55 |     await $target->writeAsync($this->stream->rawReadBlocking());
    |                                              ^^^^^^^^^^^^^^^
   --> vendor/hhvm/hsl-experimental/src/io/ReadHandle.php
 17 | interface ReadHandle extends Handle {
    |           ^^^^^^^^^^ Declaration of HH\Lib\IO\ReadHandle is here

Parsing[1002] You cannot use HH_FIXME or HH_IGNORE_ERROR comments to suppress error 1002
   --> vendor/usox/sharesta/example/webroot/index.hh
  4 | /* HH_FIXME[1002] Top level require, because the autoloader is required for the classes below. */
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Parsing[1002] Toplevel statements are not allowed. Use __EntryPoint attribute instead
   --> vendor/usox/sharesta/example/webroot/index.hh
  5 | require_once '../../vendor/hh_autoload.hh';
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\ReadHandle
   --> vendor/usox/sharesta/src/RequestBody.hh
 10 |   private ?IO\ReadHandle $input;
    |            ^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\ReadHandle
   --> vendor/usox/sharesta/src/RequestBody.hh
 12 |   public function useIO(?IO\ReadHandle $input): this{
    |                          ^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\request_input (a global function)
   --> vendor/usox/sharesta/src/RequestBody.hh
 24 |     $req_input = IO\request_input();
    |                  ^^^^^^^^^^^^^^^^

Typing[4107] Unbound name (typing): HH\Lib\Experimental\IO\request_input
   --> vendor/usox/sharesta/src/RequestBody.hh
 24 |     $req_input = IO\request_input();
    |                  ^^^^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\ReadHandle
   --> vendor/usox/sharesta/src/RequestBodyInterface.hh
  8 |   public function useIO(IO\ReadHandle $input): this;
    |                         ^^^^^^^^^^^^^

Naming[2049] Unbound name: HH\Lib\Experimental\IO\ReadHandle (an object type)
   --> vendor/usox/sharesta/src/_private/MockIOHandle.hh
  7 | class MockIOHandle implements IO\ReadHandle {
    |                               ^^^^^^^^^^^^^

143 errors found.
